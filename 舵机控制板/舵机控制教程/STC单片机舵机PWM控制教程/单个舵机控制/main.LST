C51 COMPILER V9.06   MAIN                                                                  06/18/2016 15:33:54 PAGE 1   


C51 COMPILER V9.06, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*****************************************************************************
   2           ** 文件                        : main.c
   3           ** 作者                        : Zheng23
   4           ** 日期                        :                       
   5           ** 功能                        : 
   6          /*****************************************************************************/
   7          //#include <STC15.h>
   8          //#include"STC89C5xRC.H"
   9          
  10          
  11          //一定要用12M的晶振
  12          #include "reg51.h"
  13          
  14          #define uint8   unsigned char    
  15          #define uint16  unsigned short int
  16          #define uint32  unsigned long 
  17          
  18          sbit SERVO0=P0^0;                       //控制舵机的PWM输出口
  19          
  20          uint16 Servo0PwmDuty=1500;      //PWM脉冲宽度
  21          
  22          /***********************************************************
  23          * 名    称： DelayMs(uint16 ms) 
  24          * 功    能： 延时ms毫秒
  25          * 入口参数： ms 毫秒
  26          * 出口参数： 无
  27          * 说    明：                                     
  28          /**********************************************************/
  29          void DelayMs(uint16 ms)
  30          {
  31   1              uint16 i,j;
  32   1              for(i=0;i<85;i++)               //89单片机用85,12系列单片机用800
  33   1                      for(j=0;j<ms;j++);
  34   1      }
  35          /***********************************************************
  36          * 名    称：InitTimer0()
  37          * 功    能：时钟0初始化
  38          * 入口参数：无
  39          * 出口参数：无
  40          * 说    明：12M晶振，12分频，所以计数器每递增一个数就是1微秒，完全满足舵机控制的精度要求
  41                                  因为定时器是TH0，TL0都要全部计数到0xFF后在计1个数就会产生中断，所以要想产生
  42                                  x毫秒的中断，那么TH0，TL0就应该赋值（0xFFFF-x） 从这个值开始计数产生定时中断                                     
  43          /**********************************************************/ 
  44          void InitTimer0(void)
  45          {
  46   1              TMOD &= 0xF0;           //设置定时器模式
  47   1              TMOD |= 0x01;           //设置定时器模式
  48   1              TL0 = 0x00;                     //设置定时初值
  49   1              TH0 = 0x00;                     //设置定时初值
  50   1              TF0 = 0;                        //清除TF0标志
  51   1              TR0 = 1;                        //定时器0开始计时
  52   1              ET0 = 1;                        //开定时器0中断
  53   1      }
  54          /***********************************************************
  55          * 名    称：Timer0Value(uint16 pwm)  
C51 COMPILER V9.06   MAIN                                                                  06/18/2016 15:33:54 PAGE 2   

  56          * 功    能：给定时器0计数器赋值产生定时中断 
  57          * 入口参数：pwm         控制舵机的PWM脉冲宽度值（范围：500~2500）
  58          * 出口参数：无
  59          * 说    明：12M晶振，12分频，所以计数器每递增一个数就是1微秒，完全满足舵机控制的精度要求
  60                                  因为定时器是TH0，TL0都要全部计数到0xFF后在计1个数就会产生中断，所以要想产生
  61                                  pwm毫秒的中断，那么TH0，TL0就应该赋值（0xFFFF-pwm）     从这个值开始计数产生定时中断                                     
  62          /**********************************************************/ 
  63          void Timer0Value(uint16 pwm)
  64          {
  65   1              uint16 value;
  66   1              value=0xffff-pwm;       
  67   1              TR0 = 0;
  68   1              TL0=value;                      //16位数据给8位数据赋值默认将16位数据的低八位直接赋给八位数据
  69   1          TH0=value>>8;               //将16位数据右移8位，也就是将高8位移到低八位，再赋值给8位数据   
  70   1              TR0 = 1;
  71   1      }
  72          /***********************************************************
  73          * 名    称： main()
  74          * 功    能： 入口函数
  75          * 入口参数： 无
  76          * 出口参数： 无
  77          * 说    明：                                     
  78          /**********************************************************/ 
  79          void main(void)
  80          {
  81   1      
  82   1              InitTimer0();   //定时器0初始化
  83   1              EA = 1;                 //开总中断
  84   1              while(1)                //大循环
  85   1              {       
  86   2                      Servo0PwmDuty = 500;            //脉冲宽度在500微秒，对应-90°
  87   2                      DelayMs(1000);          //延时1秒
  88   2                      Servo0PwmDuty = 1000;   //脉冲宽度在1000微秒，对应-45°
  89   2                      DelayMs(1000);
  90   2                      Servo0PwmDuty = 1500;
  91   2                      DelayMs(1000);
  92   2                      Servo0PwmDuty = 2000;
  93   2                      DelayMs(1000);
  94   2                      Servo0PwmDuty = 2500;
  95   2                      DelayMs(1000);
  96   2                      Servo0PwmDuty = 2000;
  97   2                      DelayMs(1000);
  98   2                      Servo0PwmDuty = 1500;
  99   2                      DelayMs(1000);
 100   2                      Servo0PwmDuty = 1000;
 101   2                      DelayMs(1000);
 102   2              }
 103   1      }
 104          
 105          /***********************************************************
 106          * 名    称： Timer0_isr() interrupt 1 using 1
 107          * 功    能： 时钟0中断处理
 108          * 入口参数： 无
 109          * 出口参数： 无
 110          * 说    明：                                     
 111          /**********************************************************/ 
 112          void Timer0_isr(void) interrupt 1 using 1
 113          {
 114   1              static uint16 i = 1;    //静态变量：每次调用函数时保持上一次所赋的值，
 115   1                                                              //跟全局变量类似，不同是它只能用于此函数内部
 116   1              switch(i)
 117   1              {
C51 COMPILER V9.06   MAIN                                                                  06/18/2016 15:33:54 PAGE 3   

 118   2                      case 1:
 119   2                              SERVO0 = 1;     //PWM控制脚高电平
 120   2                              //给定时器0赋值，计数Pwm0Duty个脉冲后产生中断，下次中断会进入下一个case语句
 121   2                              Timer0Value(Servo0PwmDuty);     
 122   2                              break;
 123   2                      case 2:
 124   2                              SERVO0 = 0;     //PWM控制脚低电平
 125   2                              //高脉冲结束后剩下的时间(20000-Pwm0Duty)全是低电平了，Pwm0Duty + (20000-Pwm0Duty) = 20000个脉冲正好为一
             -个周期20毫秒 
 126   2                              Timer0Value(20000-Servo0PwmDuty);
 127   2                              i = 0;  
 128   2                              break;   
 129   2              }
 130   1              i++;
 131   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    207    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
